package com.brhn.xpnsr

import android.content.Context
import android.content.Intent
import android.os.Bundle
import androidx.activity.ComponentActivity
import androidx.activity.compose.setContent
import java.io.Serializable
import androidx.compose.foundation.layout.Column
import androidx.compose.foundation.layout.padding
import androidx.compose.foundation.lazy.LazyColumn
import androidx.compose.foundation.lazy.items
import androidx.compose.material.icons.Icons
import androidx.compose.material.icons.filled.Add
import androidx.compose.material3.FloatingActionButton
import androidx.compose.material3.Icon
import androidx.compose.material3.MaterialTheme
import androidx.compose.material3.Scaffold
import androidx.compose.material3.Surface
import androidx.compose.runtime.Composable
import androidx.compose.ui.Modifier
import com.brhn.xpnsr.ui.theme.XPNSRTheme

class TransactionListActivity : ComponentActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContent {
            XPNSRTheme {
                Surface(color = MaterialTheme.colorScheme.background) {
                    Scaffold(
                        floatingActionButton = {
                            FloatingActionButton(onClick = {
                                val intent = Intent(this, AddTransactionActivity::class.java)
                                startActivity(intent)
                            }) {
                                Icon(Icons.Filled.Add, contentDescription = "Add Transaction")
                            }
                        }
                    ) { innerPadding ->
                        TransactionList(
                            transactions = getSampleTransactions(),
                            context = this@TransactionListActivity,
                            modifier = Modifier.padding(innerPadding) // Apply the padding here
                        )
                    }
                }
            }
        }
    }
}


@Composable
fun TransactionList(
    transactions: List<Transaction>,
    context: Context,
    modifier: Modifier = Modifier
) {
    LazyColumn(modifier = modifier) {
        items(transactions) { transaction ->
            TransactionItem(transaction) {
                val intent = Intent(context, TransactionDetailActivity::class.java)
                intent.putExtra("TRANSACTION_DATA", transaction)
                context.startActivity(intent)
            }
        }
    }
}


fun getCategoryIcon(category: String): Int {
    return when (category) {
        // these samples are generated by AI
        "Groceries" -> R.drawable.baseline_shopping_cart_24
        "Salary", "Freelance", "Dividends", "Investments", "Bonus" -> R.drawable.baseline_attach_money_24
        "Dining", "Cafe" -> R.drawable.baseline_dining_24
        "Fitness", "Gym Membership", "Yoga Classes" -> R.drawable.baseline_fitness_center_24
        "Bills", "Electricity Bill", "Gas Bill" -> R.drawable.baseline_attach_money_24
        "Rent" -> R.drawable.baseline_add_home_24
        "Entertainment", "Movie Night", "Concert Tickets", "Theater Tickets" -> R.drawable.baseline_movie_24
        "Education", "Book Purchase", "Online Course" -> R.drawable.baseline_school_24
        "Transport", "Train Ticket", "Taxi Ride", "Uber Ride" -> R.drawable.baseline_directions_transit_24
        "Insurance", "Car Insurance", "Health Insurance" -> R.drawable.baseline_attach_money_24
        "Gifts", "Birthday Gift" -> R.drawable.baseline_cake_24
        "Healthcare", "Pharmacy", "Pet Vet Visit" -> R.drawable.baseline_medical_services_24
        "Home", "Gardening Supplies", "Garden Tools" -> R.drawable.baseline_local_florist_24
        "Pets", "Pet Food" -> R.drawable.baseline_pets_24
        "Electronics", "Laptop Repair" -> R.drawable.baseline_computer_24
        else -> R.drawable.baseline_do_not_disturb_24
    }
}


fun getSampleTransactions(): List<Transaction> {
    return listOf(
        // these samples are generated by AI
        Transaction("Groceries", "01/01/2024", 50.0, TransactionType.EXPENSE, "Groceries"),
        Transaction("Salary", "05/01/2024", 3000.0, TransactionType.EARNING, "Salary"),
        Transaction("Cafe", "06/01/2024", 15.0, TransactionType.EXPENSE, "Dining"),
        Transaction("Gym Membership", "10/01/2024", 40.0, TransactionType.EXPENSE, "Fitness"),
        Transaction("Freelance Project", "15/01/2024", 500.0, TransactionType.EARNING, "Freelance"),
        Transaction("Electricity Bill", "17/01/2024", 60.0, TransactionType.EXPENSE, "Bills"),
        Transaction("Rent", "01/02/2024", 800.0, TransactionType.EXPENSE, "Rent"),
        Transaction("Movie Night", "03/02/2024", 25.0, TransactionType.EXPENSE, "Entertainment"),
        Transaction("Book Purchase", "05/02/2024", 20.0, TransactionType.EXPENSE, "Education"),
        Transaction("Train Ticket", "07/02/2024", 30.0, TransactionType.EXPENSE, "Transport"),
        Transaction("Car Insurance", "10/02/2024", 100.0, TransactionType.EXPENSE, "Insurance"),
        Transaction("Dividends", "12/02/2024", 150.0, TransactionType.EARNING, "Investments"),
        Transaction("Groceries", "15/02/2024", 55.0, TransactionType.EXPENSE, "Groceries"),
        Transaction("Birthday Gift", "20/02/2024", 75.0, TransactionType.EXPENSE, "Gifts"),
        Transaction(
            "Concert Tickets",
            "23/02/2024",
            90.0,
            TransactionType.EXPENSE,
            "Entertainment"
        ),
        Transaction("Pharmacy", "25/02/2024", 15.0, TransactionType.EXPENSE, "Healthcare"),
        Transaction("Gardening Supplies", "28/02/2024", 35.0, TransactionType.EXPENSE, "Home"),
        Transaction("Pet Food", "02/03/2024", 25.0, TransactionType.EXPENSE, "Pets"),
        Transaction("Taxi Ride", "05/03/2024", 18.0, TransactionType.EXPENSE, "Transport"),
        Transaction("Laptop Repair", "10/03/2024", 120.0, TransactionType.EXPENSE, "Electronics"),
        Transaction("Bonus", "15/03/2024", 1000.0, TransactionType.EARNING, "Salary"),
        Transaction("Yoga Classes", "18/03/2024", 70.0, TransactionType.EXPENSE, "Fitness"),
        Transaction("Online Course", "21/03/2024", 200.0, TransactionType.EXPENSE, "Education"),
        Transaction("Dinner Out", "25/03/2024", 60.0, TransactionType.EXPENSE, "Dining"),
        Transaction("Health Insurance", "28/03/2024", 130.0, TransactionType.EXPENSE, "Insurance"),
        Transaction("Garden Tools", "01/04/2024", 45.0, TransactionType.EXPENSE, "Home"),
        Transaction("Gas Bill", "04/04/2024", 50.0, TransactionType.EXPENSE, "Bills"),
        Transaction(
            "Theater Tickets",
            "07/04/2024",
            80.0,
            TransactionType.EXPENSE,
            "Entertainment"
        ),
        Transaction("Pet Vet Visit", "10/04/2024", 100.0, TransactionType.EXPENSE, "Pets"),
        Transaction("Uber Ride", "12/04/2024", 22.0, TransactionType.EXPENSE, "Transport")
    )
}

enum class TransactionType {
    EARNING,
    EXPENSE
}


data class Transaction(
    val name: String,
    val date: String,
    val amount: Double,
    val type: TransactionType,
    val category: String
) : Serializable

